--Ejecutar el siguiente script en el ambiente deseado
CREATE TABLE MTI_FACTURACION.FE_EXPORTACION 
(
  EXPORTACION_KEY NUMBER NOT NULL 
, CLAVE VARCHAR2(20 BYTE) NOT NULL 
, DESCRIPCION VARCHAR2(200 BYTE) 
) ;

ALTER TABLE MTI_FACTURACION.FE_EXPORTACION
ADD CONSTRAINT PK_FE_EXPORTACION PRIMARY KEY 
(
  EXPORTACION_KEY 
);

ALTER TABLE MTI_FACTURACION.FE_EXPORTACION
(CLAVE IS NOT NULL)
ENABLE;

ALTER TABLE MTI_FACTURACION.FE_EXPORTACION
(CLAVE IS NOT NULL)
ENABLE;

ALTER TABLE MTI_FACTURACION.FE_EXPORTACION
(CLAVE IS NOT NULL)
ENABLE;

ALTER TABLE MTI_FACTURACION.FE_EXPORTACION
ADD CONSTRAINT NN_FE_EXPORTACION_03 CHECK 
(DESCRIPCION IS NOT NULL)
ENABLE;

COMMENT ON COLUMN MTI_FACTURACION.FE_EXPORTACION.EXPORTACION_KEY IS 'Llave primaria de la tabla.';
COMMENT ON COLUMN MTI_FACTURACION.FE_EXPORTACION.CLAVE IS 'Identificador de la clave de exportación).';
COMMENT ON COLUMN MTI_FACTURACION.FE_EXPORTACION.DESCRIPCION IS 'Descripción de la exportación.';
/
create sequence MTI_FACTURACION.SEQ_FE_EXPORTACION
  MINVALUE 1
  MAXVALUE 9999999999999999999999999999
  INCREMENT BY 1
  NOCYCLE
  NOORDER
  NOCACHE;
  /
create TRIGGER MTI_FACTURACION.T_FE_EXPORTACION_BI 
BEFORE INSERT ON MTI_FACTURACION.FE_EXPORTACION
for each row
declare
lnKey Number;
Begin
  Select MTI_FACTURACION.SEQ_FE_EXPORTACION.NEXTVAL
    Into lnKey
    From dual;   

    :new.exportacion_key := lnkey;
end;  
/
Begin
    Insert into MTI_FACTURACION.FE_EXPORTACION (CLAVE,DESCRIPCION) values ('01','No aplica');
    Insert into MTI_FACTURACION.FE_EXPORTACION (CLAVE,DESCRIPCION) values ('02','Definitiva');
    Insert into MTI_FACTURACION.FE_EXPORTACION (CLAVE,DESCRIPCION) values ('03','Temporal');
Commit;
Exception
   When Others Then
      Rollback;
      raise_application_error(-20001,sqlerrm);
End;
